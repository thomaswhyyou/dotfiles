---

- name: copy opencv file and unpack in guest dest
  unarchive: src={{ opencv_file_name }}.{{ opencv_file_ext }}
             dest={{ downloads_dir }}

# Above should place an unpacked folder named by file name inside dest;
# It doesn't return with a clean, newly created folder path, so manually
# specify them below.
- name: create "release" sub folder inside the unpacked folder
  file: path={{ downloads_dir }}/{{ opencv_file_name }}/release
        state=directory
  register: opencv_release_dir

- name: cmake to get the system ready for installation
  args:
    chdir: "{{ opencv_release_dir.path }}"
  command: >
        cmake
        -D CMAKE_BUILD_TYPE=RELEASE
        -D BUILD_NEW_PYTHON_SUPPORT=ON
        -D INSTALL_PYTHON_EXAMPLES=ON
        -D BUILD_EXAMPLES=ON
        -D CMAKE_INSTALL_PREFIX={{ cmake_install_prefix }}
        -D PYTHON_EXECUTABLE={{ venv_python }}
        ..

- name: do "make"
  args:
    chdir: "{{ opencv_release_dir.path }}"
  command: make

- name: do "make install"
  args:
    chdir: "{{ opencv_release_dir.path }}"
  command: make install

# Symlink between installed opencv python bindings from system python
# site-packages path to virtualenv one.
- name: find installed opencv python bindings (cv2.so)
  args:
    chdir: /
  command: find {{ cmake_install_prefix }} -path "*site-packages/cv2.so"
  register: opencv_python_bindings_cv2so

- name: find installed opencv python bindings (cv.py)
  args:
    chdir: /
  command: find {{ cmake_install_prefix }} -path "*site-packages/cv.py"
  register: opencv_python_bindings_cvpy

- name: find site-packages folder in virtualenv
  args:
    chdir: /
  command: find {{ venv_dir }} -path "*/site-packages"
  register: venv_sitepackages_dir

- name: create symlinks of installed opencv python bindings into virtualenv site-packages
  file: src={{ item.stdout }}
        dest={{ venv_sitepackages_dir.stdout }}/{{ item.stdout | basename }}
        state=link
  with_items:
    - "{{ opencv_python_bindings_cv2so }}"
    - "{{ opencv_python_bindings_cvpy }}"

# Get rid of an annoying but non-critical warning from opencv
# http://stackoverflow.com/a/26028597/3479934
- name: create hardlink to dump useless opencv warning msgs into /dev/null
  file: src=/dev/null dest=/dev/raw1394 state=hard
